#!/usr/bin/env bash

if [ -z "$1" ] ; then
    SOURCEDIR="$(pwd)"
else
    SOURCEDIR="$1"
fi

if [ -z "$2" ] ; then
    DESTFILE="$HOME/.ssh/authorized_keys"
else
    DESTFILE="$2"
fi

if [ -z "$3" ] ; then
    echo -e "Updating '$DESTFILE' from keys in '$SOURCEDIR'\nPress enter to confirm"
    read -r
fi

[ -f "$DESTFILE" ] && mv "$DESTFILE" "$DESTFILE.save"

TMPFILE="$(mktemp /tmp/keys.XXXXXXXXX)"
if [ -z "$TMPFILE" ] ; then
    echo "Failed to create temp file"
    exit 1
fi

function needful() {
    local source_file
    local target_file
    source_file="$1"
    target_file="$2"
    ssh-keygen -l -f "$source_file" &>/dev/null
    if [ "$?" != "0" ] ; then
        echo "$source_file does not appear to be a public key"
        return 1
    fi
    cat "$source_file" >> "$target_file"
}
export -f needful

find -L "$SOURCEDIR" -type f -print0 | xargs -0 -n1 -I{} bash -c "needful {} $TMPFILE"
echo -e "\n" >> "$TMPFILE"

if [ -z "$3" ] ; then
    cat "$TMPFILE"
    echo -e "Press enter to confirm new keys"
    read -r
fi

mv "$TMPFILE" "$DESTFILE"
