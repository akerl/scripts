#!/bin/bash

if [ -z "$1" ] ; then
  echo "Please provide a file name"
  exit
fi

if [ ! -f "/srv/ssl/openssl.cnf" ] ; then
  mkdir -p /srv/ssl/{certs,keys}
  echo 'dir = /srv/ssl

[ ca ]
default_ca = CA_default

[ CA_default ]
serial          = $dir/rootca/serial
database        = $dir/rootca/index.txt
new_certs_dir   = $dir/rootca/certs
certificate     = $dir/rootca/cacert.pem
private_key     = $dir/rootca/private/cakey.pem
default_days    = 365
default_md      = sha1
preserve        = no
nameopt         = default_ca
certopt         = default_ca
policy          = policy_match

[ policy_match ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits        = 2048
default_keyfile     = $dir/rootca/private/root.pem
default_md          = sha1
distinguished_name  = distinguished_name
req_extensions      = v3_req

[ distinguished_name ]
0.organizationName      = Organization Name (company)
organizationalUnitName  = Organizational Unit Name (department, division)
emailAddress            = Email Address
emailAddress_max        = 40
localityName            = Locality Name (city, district)
stateOrProvinceName     = State or Province Name (full name)
countryName             = Country Name (2 letter code)
countryName_min         = 2
countryName_max         = 2
commonName              = Common Name (hostname, IP, or your name)
commonName_max          = 64
countryName_default         = US
stateOrProvinceName_default = Linodia
localityName_default        = Nowhere 
0.organizationName_default  = akerl
emailAddress_default        = admin@lesaker.org

[ v3_ca ]
basicConstraints        = CA:TRUE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer:always

[ v3_req ]
basicConstraints      = CA:FALSE
subjectKeyIdentifier  = hash
' > /srv/ssl/openssl.cnf
fi

openssl req -new -nodes -out $1.pem -keyout $1.key -config /srv/ssl/openssl.cnf

